@import "./ag-grid-mixins";

@mixin ag-grid-border($border-type, $sides: null, $radius: null, $width: 1px, $color: null, $style: solid, $none: false) {
    @if ag-should-draw-border($border-type) {
        @if $color == null {
            $color: if($border-type == secondary, $ag-secondary-border-color, $ag-border-color)
        }

        @if $sides {
            @each $side in $sides {
                border-#{$side}: if($none, none, $style $width $color);
            }
        }
        @else {
            border: if($none, none, $style $width $color);
        }
        @if $radius {
            border-radius: $radius;
        }
    }
}

@function ag-should-draw-border($type) {
    $valid-types: (
        critical: $ag-borders-critical,
        primary: $ag-borders,
        side-button: $ag-borders-side-button,
        secondary: $ag-borders-secondary
    );
    $draw-border: false;
    @if not map-has-key($valid-types, $type) {
        @error "Invalid border type '#{inspect($type)}'";
    }
    @return map-get($valid-types, $type);
}

@mixin ag-box-shadow($color) {
    box-shadow: 0 0 2px 0.1rem transparentize($color, 0.6);
}

@mixin ag-chrome-box-shadow {
    box-shadow: 0 1px 4px 1px transparentize($ag-color-chrome-shadow, 0.6);
}

@mixin ag-card() {
    @include ag-grid-border(primary);
    
    background: $ag-background-color;
    border-radius: $ag-card-radius;
    box-shadow: $ag-card-shadow;
    padding: $ag-grid-size;
}

// %ag-halo {
//     transition: box-shadow 0.1s ease-out;

//     &:focus {
//         border-color: $ag-checkbox-check-color;
//         @include ag-box-shadow($ag-checkbox-check-color);
//     }
// }


// %ag-toggle-button {
//     box-sizing: border-box;
//     -webkit-appearance: none;
//     width: $ag-toggle-button-width;
//     height: $ag-toggle-button-height;
//     background-color: $ag-toggle-button-background-color;
//     border: 1px solid $ag-checkbox-border-color;
//     border-radius: $ag-toggle-button-height / 2;
//     margin: 0;
//     position: relative;

//     &:focus {
//         box-shadow: none;
//     }

//     &:checked {
//         background-color: $ag-toggle-button-color;
//     }

//     &::before {
//         box-sizing: border-box;
//         height: $ag-toggle-button-height - 2;
//         width: $ag-toggle-button-height - 2;
//         content: ' ';
//         background: $ag-background-color;
//         display: inline-block;
//         position: absolute;
//         border-radius: $ag-toggle-button-height / 2;
//         transition: left 100ms linear;
//         top: 0;
//         left: -1px;
//         // below resets stuff from checkbox
//         visibility: visible;
//         border: 1px solid $ag-checkbox-border-color;
//         padding: 0;
//     }

//     &:checked::before {
//         left: calc(100% - #{$ag-toggle-button-height - 3});
//     }

//     &::after {
//         margin: 0;
//         position: absolute;
//         left: 0;
//         top: 0;
//         content: none;
//         line-height: 20px;
//         display: block;
//         text-align: right;
//         padding-left: 5px;
//         padding-right: 5px;
//         transform: none;
//         width: auto;
//         height: auto;
//         border: 0;
//     }

//     &:checked::after {
//         text-align: left;
//         content: ' ';
//     }
// }

// %ag-radio-button {
//     @extend %ag-halo;
//     -webkit-appearance: none;
//     border: $ag-checkbox-border-size solid $ag-checkbox-border-color;
//     border-radius: 100%;
//     width: $ag-checkbox-size;
//     height: $ag-checkbox-size;
//     margin: 0;
//     vertical-align: middle;
//     background: $ag-background-color;

//     &::after {
//         content: ' ';
//         border-radius: 100%;
//         background: $ag-checkbox-check-color;
//         width: 0;
//         height: 0;
//         display: block;
//         margin-left: $ag-checkbox-size - 8;
//         margin-top: $ag-checkbox-size - 8;
//         transition: all 0.08s ease-out;
//     }

//     &:checked {
//         // border-color: $ag-color-primary;
//         &::after {
//             width: $ag-checkbox-size - 8;
//             height: $ag-checkbox-size - 8;
//             margin-left: 4px - $ag-checkbox-border-size;
//             margin-right: 4px - $ag-checkbox-border-size;
//             margin-top: 4px - $ag-checkbox-border-size;
//         }
//     }
// }

@mixin ag-icon-element($icon, $code) {
  .ag-icon-#{$icon} {
      &:before {
          content: $code;
      }
  }
}

@mixin ag-icons-font-face() {
    @font-face {
        font-family: '#{$ag-icon-font-family}';
        src: $ag-icons-data;
        font-weight: normal;
        font-style: normal;
    }
}

@mixin ag-icons-webfont() {
  .ag-icon {
      font-family: '#{$ag-icon-font-family}';
      font-size: $ag-icon-size;
      font-style: normal;
      font-weight: normal;
      font-variant: normal;
      text-transform: none;
      
      /* Better Font Rendering =========== */
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
  }

  @include ag-icon-element('aggregation', $ag-icon-aggregation);
  @include ag-icon-element('arrows', $ag-icon-arrows);
  @include ag-icon-element('asc', $ag-icon-asc);
  @include ag-icon-element('cancel', $ag-icon-cancel);
  @include ag-icon-element('chart', $ag-icon-chart);
  @include ag-icon-element('color-picker', $ag-icon-color-picker);
  @include ag-icon-element('column', $ag-icon-column);
  @include ag-icon-element('columns', $ag-icon-columns);
  @include ag-icon-element('contracted', $ag-icon-contracted);
  @include ag-icon-element('copy', $ag-icon-copy);
  @include ag-icon-element('cross', $ag-icon-cross);
  @include ag-icon-element('cut', $ag-icon-cut);
  @include ag-icon-element('data', $ag-icon-data);
  @include ag-icon-element('desc', $ag-icon-desc);
  @include ag-icon-element('expanded', $ag-icon-expanded);
  @include ag-icon-element('eye-slash', $ag-icon-eye-slash);
  @include ag-icon-element('eye', $ag-icon-eye);
  @include ag-icon-element('filter', $ag-icon-filter);
  @include ag-icon-element('first', $ag-icon-first);
  @include ag-icon-element('grip', $ag-icon-grip);
  @include ag-icon-element('group', $ag-icon-group);
  @include ag-icon-element('indeterminate', $ag-icon-indeterminate);
  @include ag-icon-element('last', $ag-icon-last);
  @include ag-icon-element('left', $ag-icon-left);
  @include ag-icon-element('linked', $ag-icon-linked);
  @include ag-icon-element('loading', $ag-icon-loading);
  @include ag-icon-element('maximize', $ag-icon-maximize);
  @include ag-icon-element('menu', $ag-icon-menu);
  @include ag-icon-element('minimize', $ag-icon-minimize);
  @include ag-icon-element('minus', $ag-icon-minus);
  @include ag-icon-element('next', $ag-icon-next);
  @include ag-icon-element('none', $ag-icon-none);
  @include ag-icon-element('not-allowed', $ag-icon-not-allowed);
  @include ag-icon-element('paste', $ag-icon-paste);
  @include ag-icon-element('pin', $ag-icon-pin);
  @include ag-icon-element('pivot', $ag-icon-pivot);
  @include ag-icon-element('plus', $ag-icon-plus);
  @include ag-icon-element('previous', $ag-icon-previous);
  @include ag-icon-element('right', $ag-icon-right);
  @include ag-icon-element('save', $ag-icon-save);
  @include ag-icon-element('small-down', $ag-icon-small-down);
  @include ag-icon-element('small-left', $ag-icon-small-left);
  @include ag-icon-element('small-right', $ag-icon-small-right);
  @include ag-icon-element('small-up', $ag-icon-small-up);
  @include ag-icon-element('tick', $ag-icon-tick);
  @include ag-icon-element('tree-closed', $ag-icon-tree-closed);
  @include ag-icon-element('tree-indeterminate', $ag-icon-tree-indeterminate);
  @include ag-icon-element('tree-open', $ag-icon-tree-open);
  @include ag-icon-element('unlinked', $ag-icon-unlinked);

  .ag-icon-row-drag:before {
      content: $ag-icon-grip;
  }

  .ag-right-arrow:before {
      content: $ag-icon-left;
  }

  .ag-right-arrow:before {
      content: $ag-icon-right;
  }

}

@mixin ag-color-self-overlay($color, $times) {
    $solidity: 1 - opacity($color);
    $output-solidity: 1;
    @if $times > 0 {
        @for $i from 1 through $times {
            $output-solidity: $output-solidity * $solidity;
        }
    }

    background-color: rgba($color, 1 - $output-solidity);
}
